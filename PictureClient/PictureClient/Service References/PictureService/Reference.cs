//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PictureClient.PictureService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://server.picture.codinggain.org", ConfigurationName="PictureService.PictureInterface")]
    public interface PictureInterface {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="uploadVideoReturn")]
        int uploadVideo(string username, string password, string filename, string video);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="uploadVideoReturn")]
        System.Threading.Tasks.Task<int> uploadVideoAsync(string username, string password, string filename, string video);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="uploadFileReturn")]
        int uploadFile(string data, string filename, string username, string password, string project);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="uploadFileReturn")]
        System.Threading.Tasks.Task<int> uploadFileAsync(string data, string filename, string username, string password, string project);
        
        // CODEGEN: Parameter 'getProjectPicIdsReturn' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getProjectPicIdsReturn")]
        PictureClient.PictureService.getProjectPicIdsResponse getProjectPicIds(PictureClient.PictureService.getProjectPicIdsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<PictureClient.PictureService.getProjectPicIdsResponse> getProjectPicIdsAsync(PictureClient.PictureService.getProjectPicIdsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="putPictureReturn")]
        int putPicture(string data, string filename, string username, string password, string project, int proj_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="putPictureReturn")]
        System.Threading.Tasks.Task<int> putPictureAsync(string data, string filename, string username, string password, string project, int proj_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="removePictureReturn")]
        int removePicture(string username, string password, int pic_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="removePictureReturn")]
        System.Threading.Tasks.Task<int> removePictureAsync(string username, string password, int pic_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void addCaption(string username, string password, int pic_id, string caption);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task addCaptionAsync(string username, string password, int pic_id, string caption);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getThumbReturn")]
        PictureClient.PictureService.PictureInformation getThumb(int id, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getThumbReturn")]
        System.Threading.Tasks.Task<PictureClient.PictureService.PictureInformation> getThumbAsync(int id, string username, string password);
        
        // CODEGEN: Parameter 'getProjectsReturn' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getProjectsReturn")]
        PictureClient.PictureService.getProjectsResponse getProjects(PictureClient.PictureService.getProjectsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<PictureClient.PictureService.getProjectsResponse> getProjectsAsync(PictureClient.PictureService.getProjectsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getVideoListReturn")]
        string getVideoList(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getVideoListReturn")]
        System.Threading.Tasks.Task<string> getVideoListAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="createProjectReturn")]
        int createProject(string username, string password, string project);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="createProjectReturn")]
        System.Threading.Tasks.Task<int> createProjectAsync(string username, string password, string project);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getPictureReturn")]
        PictureClient.PictureService.PictureInformation getPicture(int id, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getPictureReturn")]
        System.Threading.Tasks.Task<PictureClient.PictureService.PictureInformation> getPictureAsync(int id, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getVideoReturn")]
        string getVideo(string username, string password, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getVideoReturn")]
        System.Threading.Tasks.Task<string> getVideoAsync(string username, string password, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="checkCredentialsReturn")]
        bool checkCredentials(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="checkCredentialsReturn")]
        System.Threading.Tasks.Task<bool> checkCredentialsAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="rotateLeftReturn")]
        int rotateLeft(string username, string password, int pic_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="rotateLeftReturn")]
        System.Threading.Tasks.Task<int> rotateLeftAsync(string username, string password, int pic_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="rotateRightReturn")]
        int rotateRight(string username, string password, int pic_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="rotateRightReturn")]
        System.Threading.Tasks.Task<int> rotateRightAsync(string username, string password, int pic_id);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://server.picture.codinggain.org")]
    public partial class PictureIdInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string filenameField;
        
        private int next_idField;
        
        private int prev_idField;
        
        private int proj_idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
                this.RaisePropertyChanged("filename");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int next_id {
            get {
                return this.next_idField;
            }
            set {
                this.next_idField = value;
                this.RaisePropertyChanged("next_id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int prev_id {
            get {
                return this.prev_idField;
            }
            set {
                this.prev_idField = value;
                this.RaisePropertyChanged("prev_id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int proj_id {
            get {
                return this.proj_idField;
            }
            set {
                this.proj_idField = value;
                this.RaisePropertyChanged("proj_id");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://server.picture.codinggain.org")]
    public partial class ProjectInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string projectNameField;
        
        private int idField;
        
        private string usernameField;
        
        private int firstIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string projectName {
            get {
                return this.projectNameField;
            }
            set {
                this.projectNameField = value;
                this.RaisePropertyChanged("projectName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int firstId {
            get {
                return this.firstIdField;
            }
            set {
                this.firstIdField = value;
                this.RaisePropertyChanged("firstId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://server.picture.codinggain.org")]
    public partial class PictureInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string filenameField;
        
        private int sizeField;
        
        private byte[] dataField;
        
        private byte[] thumbField;
        
        private int next_idField;
        
        private string user_idField;
        
        private int blog_idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
                this.RaisePropertyChanged("filename");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
                this.RaisePropertyChanged("size");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true, Order=2)]
        public byte[] data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
                this.RaisePropertyChanged("data");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true, Order=3)]
        public byte[] thumb {
            get {
                return this.thumbField;
            }
            set {
                this.thumbField = value;
                this.RaisePropertyChanged("thumb");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int next_id {
            get {
                return this.next_idField;
            }
            set {
                this.next_idField = value;
                this.RaisePropertyChanged("next_id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
                this.RaisePropertyChanged("user_id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int blog_id {
            get {
                return this.blog_idField;
            }
            set {
                this.blog_idField = value;
                this.RaisePropertyChanged("blog_id");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProjectPicIds", WrapperNamespace="http://server.picture.codinggain.org", IsWrapped=true)]
    public partial class getProjectPicIdsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://server.picture.codinggain.org", Order=0)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://server.picture.codinggain.org", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://server.picture.codinggain.org", Order=2)]
        public int proj_id;
        
        public getProjectPicIdsRequest() {
        }
        
        public getProjectPicIdsRequest(string username, string password, int proj_id) {
            this.username = username;
            this.password = password;
            this.proj_id = proj_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProjectPicIdsResponse", WrapperNamespace="http://server.picture.codinggain.org", IsWrapped=true)]
    public partial class getProjectPicIdsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://server.picture.codinggain.org", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("getProjectPicIdsReturn")]
        public PictureClient.PictureService.PictureIdInfo[] getProjectPicIdsReturn;
        
        public getProjectPicIdsResponse() {
        }
        
        public getProjectPicIdsResponse(PictureClient.PictureService.PictureIdInfo[] getProjectPicIdsReturn) {
            this.getProjectPicIdsReturn = getProjectPicIdsReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProjects", WrapperNamespace="http://server.picture.codinggain.org", IsWrapped=true)]
    public partial class getProjectsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://server.picture.codinggain.org", Order=0)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://server.picture.codinggain.org", Order=1)]
        public string password;
        
        public getProjectsRequest() {
        }
        
        public getProjectsRequest(string username, string password) {
            this.username = username;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProjectsResponse", WrapperNamespace="http://server.picture.codinggain.org", IsWrapped=true)]
    public partial class getProjectsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://server.picture.codinggain.org", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("getProjectsReturn")]
        public PictureClient.PictureService.ProjectInformation[] getProjectsReturn;
        
        public getProjectsResponse() {
        }
        
        public getProjectsResponse(PictureClient.PictureService.ProjectInformation[] getProjectsReturn) {
            this.getProjectsReturn = getProjectsReturn;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PictureInterfaceChannel : PictureClient.PictureService.PictureInterface, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PictureInterfaceClient : System.ServiceModel.ClientBase<PictureClient.PictureService.PictureInterface>, PictureClient.PictureService.PictureInterface {
        
        public PictureInterfaceClient() {
        }
        
        public PictureInterfaceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PictureInterfaceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PictureInterfaceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PictureInterfaceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int uploadVideo(string username, string password, string filename, string video) {
            return base.Channel.uploadVideo(username, password, filename, video);
        }
        
        public System.Threading.Tasks.Task<int> uploadVideoAsync(string username, string password, string filename, string video) {
            return base.Channel.uploadVideoAsync(username, password, filename, video);
        }
        
        public int uploadFile(string data, string filename, string username, string password, string project) {
            return base.Channel.uploadFile(data, filename, username, password, project);
        }
        
        public System.Threading.Tasks.Task<int> uploadFileAsync(string data, string filename, string username, string password, string project) {
            return base.Channel.uploadFileAsync(data, filename, username, password, project);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PictureClient.PictureService.getProjectPicIdsResponse PictureClient.PictureService.PictureInterface.getProjectPicIds(PictureClient.PictureService.getProjectPicIdsRequest request) {
            return base.Channel.getProjectPicIds(request);
        }
        
        public PictureClient.PictureService.PictureIdInfo[] getProjectPicIds(string username, string password, int proj_id) {
            PictureClient.PictureService.getProjectPicIdsRequest inValue = new PictureClient.PictureService.getProjectPicIdsRequest();
            inValue.username = username;
            inValue.password = password;
            inValue.proj_id = proj_id;
            PictureClient.PictureService.getProjectPicIdsResponse retVal = ((PictureClient.PictureService.PictureInterface)(this)).getProjectPicIds(inValue);
            return retVal.getProjectPicIdsReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PictureClient.PictureService.getProjectPicIdsResponse> PictureClient.PictureService.PictureInterface.getProjectPicIdsAsync(PictureClient.PictureService.getProjectPicIdsRequest request) {
            return base.Channel.getProjectPicIdsAsync(request);
        }
        
        public System.Threading.Tasks.Task<PictureClient.PictureService.getProjectPicIdsResponse> getProjectPicIdsAsync(string username, string password, int proj_id) {
            PictureClient.PictureService.getProjectPicIdsRequest inValue = new PictureClient.PictureService.getProjectPicIdsRequest();
            inValue.username = username;
            inValue.password = password;
            inValue.proj_id = proj_id;
            return ((PictureClient.PictureService.PictureInterface)(this)).getProjectPicIdsAsync(inValue);
        }
        
        public int putPicture(string data, string filename, string username, string password, string project, int proj_id) {
            return base.Channel.putPicture(data, filename, username, password, project, proj_id);
        }
        
        public System.Threading.Tasks.Task<int> putPictureAsync(string data, string filename, string username, string password, string project, int proj_id) {
            return base.Channel.putPictureAsync(data, filename, username, password, project, proj_id);
        }
        
        public int removePicture(string username, string password, int pic_id) {
            return base.Channel.removePicture(username, password, pic_id);
        }
        
        public System.Threading.Tasks.Task<int> removePictureAsync(string username, string password, int pic_id) {
            return base.Channel.removePictureAsync(username, password, pic_id);
        }
        
        public void addCaption(string username, string password, int pic_id, string caption) {
            base.Channel.addCaption(username, password, pic_id, caption);
        }
        
        public System.Threading.Tasks.Task addCaptionAsync(string username, string password, int pic_id, string caption) {
            return base.Channel.addCaptionAsync(username, password, pic_id, caption);
        }
        
        public PictureClient.PictureService.PictureInformation getThumb(int id, string username, string password) {
            return base.Channel.getThumb(id, username, password);
        }
        
        public System.Threading.Tasks.Task<PictureClient.PictureService.PictureInformation> getThumbAsync(int id, string username, string password) {
            return base.Channel.getThumbAsync(id, username, password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PictureClient.PictureService.getProjectsResponse PictureClient.PictureService.PictureInterface.getProjects(PictureClient.PictureService.getProjectsRequest request) {
            return base.Channel.getProjects(request);
        }
        
        public PictureClient.PictureService.ProjectInformation[] getProjects(string username, string password) {
            PictureClient.PictureService.getProjectsRequest inValue = new PictureClient.PictureService.getProjectsRequest();
            inValue.username = username;
            inValue.password = password;
            PictureClient.PictureService.getProjectsResponse retVal = ((PictureClient.PictureService.PictureInterface)(this)).getProjects(inValue);
            return retVal.getProjectsReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PictureClient.PictureService.getProjectsResponse> PictureClient.PictureService.PictureInterface.getProjectsAsync(PictureClient.PictureService.getProjectsRequest request) {
            return base.Channel.getProjectsAsync(request);
        }
        
        public System.Threading.Tasks.Task<PictureClient.PictureService.getProjectsResponse> getProjectsAsync(string username, string password) {
            PictureClient.PictureService.getProjectsRequest inValue = new PictureClient.PictureService.getProjectsRequest();
            inValue.username = username;
            inValue.password = password;
            return ((PictureClient.PictureService.PictureInterface)(this)).getProjectsAsync(inValue);
        }
        
        public string getVideoList(string username, string password) {
            return base.Channel.getVideoList(username, password);
        }
        
        public System.Threading.Tasks.Task<string> getVideoListAsync(string username, string password) {
            return base.Channel.getVideoListAsync(username, password);
        }
        
        public int createProject(string username, string password, string project) {
            return base.Channel.createProject(username, password, project);
        }
        
        public System.Threading.Tasks.Task<int> createProjectAsync(string username, string password, string project) {
            return base.Channel.createProjectAsync(username, password, project);
        }
        
        public PictureClient.PictureService.PictureInformation getPicture(int id, string username, string password) {
            return base.Channel.getPicture(id, username, password);
        }
        
        public System.Threading.Tasks.Task<PictureClient.PictureService.PictureInformation> getPictureAsync(int id, string username, string password) {
            return base.Channel.getPictureAsync(id, username, password);
        }
        
        public string getVideo(string username, string password, int id) {
            return base.Channel.getVideo(username, password, id);
        }
        
        public System.Threading.Tasks.Task<string> getVideoAsync(string username, string password, int id) {
            return base.Channel.getVideoAsync(username, password, id);
        }
        
        public bool checkCredentials(string username, string password) {
            return base.Channel.checkCredentials(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> checkCredentialsAsync(string username, string password) {
            return base.Channel.checkCredentialsAsync(username, password);
        }
        
        public int rotateLeft(string username, string password, int pic_id) {
            return base.Channel.rotateLeft(username, password, pic_id);
        }
        
        public System.Threading.Tasks.Task<int> rotateLeftAsync(string username, string password, int pic_id) {
            return base.Channel.rotateLeftAsync(username, password, pic_id);
        }
        
        public int rotateRight(string username, string password, int pic_id) {
            return base.Channel.rotateRight(username, password, pic_id);
        }
        
        public System.Threading.Tasks.Task<int> rotateRightAsync(string username, string password, int pic_id) {
            return base.Channel.rotateRightAsync(username, password, pic_id);
        }
    }
}
